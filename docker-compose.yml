version: '3.2'
services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - elk
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - '5601:5601'
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch      
  checkmk:
    build:
      context: checkmk/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: volume
        source: checkmk
        target: /omd/sites
    ports:
      - '8080:5000'
      - '6557:6557'
    networks:
      - elk
    depends_on:
      - elasticsearch

  netscaler:
    build:
      context: netscaler/
    volumes:
      - type: volume
        source: netscaler
        target: /cpx
    environment:
      - EULA=yes
      - CPX_CONFIG='{"YIELD":"Yes"}'
    ports:
      - '9443:9443'
      - '22:22'
      - '443:443'
      - '80:80'
      - '9080:9080'
      - '88:88'
    privileged: true
    cap_add:
      - NET_ADMIN
    networks:
      - elk
    tty: true
    depends_on:
      - elasticsearch

  sidecar:
    build: ./sidecar
    image: sidecar
    networks:
      - elk
    depends_on:
      - netscaler
      - consul-server-bootstrap


  consul-server-bootstrap:
    image:  consul:latest
    command: "agent -server -ui -client 0.0.0.0 -bootstrap-expect=3"
    networks:
      elk:
        aliases:
          - consul
    ports:
      - "8500:8500"
    depends_on:
      - netscaler
      - elasticsearch

  consul-server-1:
    image:  consul:latest
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      elk:
        aliases:
          - consul
    depends_on:
      - consul-server-bootstrap

  consul-server-2:
    image:  consul:latest
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      elk:
        aliases:
          - consul
    depends_on:
      - consul-server-bootstrap

  registrator:
    image: gliderlabs/registrator:latest
    command: "-cleanup -resync 5 consul://consul-server-bootstrap:8500"
    networks:
      - elk
    container_name: registrator
    depends_on:
      - consul-server-bootstrap
      - consul-server-1
      - consul-server-2
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock

networks:
  elk:
    driver: bridge
volumes:
  elasticsearch: null
  checkmk: null
  netscaler: null
